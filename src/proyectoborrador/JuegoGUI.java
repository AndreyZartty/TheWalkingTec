/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectoborrador;

import proyectoborrador.*;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.TransferHandler;
import javax.swing.border.Border;
import static proyectoborrador.FileManager.readObject;


/**
 *
 * @author Lenovo
 */
public class JuegoGUI extends javax.swing.JFrame {
    public ArrayList<Zombie> Zombies;
    public ArrayList<Arma> Armas;
    private JLabel labelSeleccionado = null;
    private Partida partidaActual;


    /**
     * Creates new form MatrixGUI
     */
    public JuegoGUI() {
        Zombies = new ArrayList<Zombie>();
        Armas = new ArrayList<Arma>();
        initComponents();
    
    
        setResizable(false);
        setPreferredSize(new Dimension(1200, 600));
        
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanelPartida);
        jPanelPartida.setLayout(jPanel1Layout);
        jPanelPartida.setPreferredSize(new Dimension(1200, 500));
        jPanelPartida.setLocation(0, 0);
        
        jPanelNivel.setPreferredSize(new Dimension(1200, 25));
        jPanelNivel.setLocation(0, 0);
        
        jLabelBienvenida.setLocation(500, 240);
        
        jButtonCargarP.setLocation(500, 340);
        
        jPanelPartida.add(jButtonCargarP);
        jPanelPartida.add(jLabelBienvenida);
        pack();
        
        jPanelConMatriz.setLayout(new GridLayout(25, 25));
        jPanelConMatriz.setPreferredSize(new Dimension(1200, 600));
        jPanelConMatriz.setLocation(0, 0);
        jPanelConMatriz.setVisible(false);
        jPanelNivel.setVisible(false);
        
        Border border = BorderFactory.createLineBorder(java.awt.Color.BLACK);

        JLabel[][] matrizDeEtiquetas = new JLabel[25][25];

        for (int i = 0; i < 25; i++) {
            for (int j = 0; j < 25; j++) {
                matrizDeEtiquetas[i][j] = new JLabel("dd" + i + j);
                matrizDeEtiquetas[i][j].setText("");
                matrizDeEtiquetas[i][j].setPreferredSize(new Dimension(20, 10));
                matrizDeEtiquetas[i][j].setBorder(border);
                jPanelConMatriz.add(matrizDeEtiquetas[i][j]);
            }
        }

        // Establecer el panelConMatriz como el componente central de la ventana
        getContentPane().add(jPanelConMatriz, BorderLayout.CENTER);

        agregarObjects();
        agregarArmas(matrizDeEtiquetas);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelConMatriz = new javax.swing.JPanel();
        jPanelPartida = new javax.swing.JPanel();
        jButtonCargarP = new javax.swing.JButton();
        jLabelBienvenida = new javax.swing.JLabel();
        jPanelNivel = new javax.swing.JPanel();
        jLabelNivel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelConMatriz.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanelConMatrizLayout = new javax.swing.GroupLayout(jPanelConMatriz);
        jPanelConMatriz.setLayout(jPanelConMatrizLayout);
        jPanelConMatrizLayout.setHorizontalGroup(
            jPanelConMatrizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );
        jPanelConMatrizLayout.setVerticalGroup(
            jPanelConMatrizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelConMatriz, java.awt.BorderLayout.LINE_END);

        jButtonCargarP.setText("Cargar Partida");
        jButtonCargarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarPActionPerformed(evt);
            }
        });

        jLabelBienvenida.setText("TheWalkingTEC");

        javax.swing.GroupLayout jPanelPartidaLayout = new javax.swing.GroupLayout(jPanelPartida);
        jPanelPartida.setLayout(jPanelPartidaLayout);
        jPanelPartidaLayout.setHorizontalGroup(
            jPanelPartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPartidaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabelBienvenida)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanelPartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelPartidaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButtonCargarP)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelPartidaLayout.setVerticalGroup(
            jPanelPartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPartidaLayout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabelBienvenida)
                .addContainerGap(201, Short.MAX_VALUE))
            .addGroup(jPanelPartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelPartidaLayout.createSequentialGroup()
                    .addGap(167, 167, 167)
                    .addComponent(jButtonCargarP)
                    .addContainerGap(168, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanelPartida, java.awt.BorderLayout.CENTER);

        jLabelNivel.setText("jLabel1");

        javax.swing.GroupLayout jPanelNivelLayout = new javax.swing.GroupLayout(jPanelNivel);
        jPanelNivel.setLayout(jPanelNivelLayout);
        jPanelNivelLayout.setHorizontalGroup(
            jPanelNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanelNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelNivelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabelNivel)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanelNivelLayout.setVerticalGroup(
            jPanelNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanelNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelNivelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabelNivel)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanelNivel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCargarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarPActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        //this.partidaActual = (Partida) FileManager.readObject(chooser.getSelectedFile().getAbsolutePath());
        
        jPanelConMatriz.setVisible(true);
        jPanelNivel.setVisible(true);
        jLabelNivel.setPreferredSize(new Dimension(1200, 15));
        jLabelNivel.setLocation(0, 0);
        jLabelNivel.setText("Nivel: " + 1);
        
        jPanelPartida.setVisible(false);
        jLabelBienvenida.setVisible(false);
        jButtonCargarP.setVisible(false);
        jButtonCargarP.setEnabled(false);
        
        pack();
        
    }//GEN-LAST:event_jButtonCargarPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JuegoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JuegoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JuegoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JuegoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JuegoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCargarP;
    private javax.swing.JLabel jLabelBienvenida;
    private javax.swing.JLabel jLabelNivel;
    private javax.swing.JPanel jPanelConMatriz;
    private javax.swing.JPanel jPanelNivel;
    private javax.swing.JPanel jPanelPartida;
    // End of variables declaration//GEN-END:variables

    public void agregarObjects (){
        String folderPath = "C:\\Users\\Lenovo\\Desktop\\POO\\objetos"; 
        

        File folder = new File(folderPath);

        if (folder.exists() && folder.isDirectory()) {
            File[] files = folder.listFiles();

            if (files != null) {
                for (File file : files) {
                    if (file.isFile() && file.getName().endsWith(".dat")) {
                        
                        Object obj = readObject(file.getAbsolutePath());

                        if (obj != null && obj instanceof Zombie) {
                            Zombie ZombieLeido = (Zombie) obj;
                            Zombies.add(ZombieLeido);
                            System.out.println("Objeto leído y agregado al ArrayList: " + obj);
                        } 
                        if(obj != null && obj instanceof Arma){
                            Arma ArmaLeida = (Arma) obj;
                            Armas.add(ArmaLeida);
                            System.out.println("Objeto leído y agregado al ArrayList: " + obj);
                            
                            
                            
                        }else {
                            System.out.println("No se pudo leer el objeto desde el archivo: " + file.getName());
                        }
                    }
                }
            }
        } else {
            System.out.println("La carpeta no existe o no es una carpeta válida.");
        }

        // En este punto, todos los objetos en objectList, en teoria xd.
    }


    public void agregarArmas(JLabel[][] matrizDeEtiquetas) {
        for (Arma arma : Armas) {
        // Obtén la ruta de la imagen de tu objeto Arma
            String rutaImagen = arma.getGif();

            // Cargar la imagen y redimensionarla
            ImageIcon icon = new ImageIcon(new ImageIcon(rutaImagen).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH));

            // Crear el JLabel con el ImageIcon
            JLabel labelArma = new JLabel(icon);

            labelArma.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    if (labelSeleccionado != null) {
                        labelSeleccionado.setIcon(labelArma.getIcon());
                        labelSeleccionado = null; // Reinicia la selección
                    }
                }
            });
        }
    }





}
